{"version":3,"sources":["util/index.js","assets/loader-icon.gif","components/header-bar-component/index.js","components/login-component/index.js","components/home-component/index.js","App.js","index.js"],"names":["setItem","key","val","localStorage","JSON","stringify","getItem","defaultValue","parse","HeaderBarComponent","props","timerRef","oneMinute","intervalOptions","value","label","LOCAL_STORAGE","useState","statesList","setStatesList","fromCache","length","map","itm","idx","id","districtList","state","state_name","district","district_name","availableSlots","initialSearch","searchConditions","setSearchConditions","Date","selectedDate","setSelectedDate","isAutoRefresh","setIsAutoRefresh","refreshInterval","setRefreshInterval","ageLimit18Plus","setAgeLimit18Plus","ageLimit45Plus","setAgeLimit45Plus","ageLimit60Plus","setAgeLimit60Plus","searchDistricts","evt","currentSearch","target","stateId","cb","axios","get","then","resp","data","districtListArr","districts","getDistricts","currentConditionIndex","findIndex","stateObj","find","state_id","prev","saveSearchConditions","searchList","seachParams","handleOnSearch","searchParams","searchObj","isLoading","url","date","d","getDate","m","getMonth","getFullYear","dateToDMY","analyzeData","centers","center","availableSession","ageFilter","push","avlSession","sessions","filter","includes","min_age_limit","session","available_capacity","available_capacity_dose1","available_capacity_dose2","addNewCondition","newSearchConsitions","clearInterval","window","renderLoader","class","type","disabled","role","aria-hidden","className","restartInterval","refInterval","parseInt","setInterval","initializeInterval","useEffect","statesFromCache","stateListArr","states","getStates","autoRefeshFlag","ageLimit18","ageLimit45","ageLimit60","loadLastSearchedValues","srch","index","title","onClick","splice","deleteCondition","aria-label","aria-describedby","onChange","districtObj","district_id","setDistrict","selected","dateFormat","checked","for","opt","ctr","colSpan","slot","indx","fee_type","vaccine_fees","fee","vaccine","name","address","href","aria-current","LoginComponent","onHandleSubmit","isError","setIsError","secretCode","secretKey","formValues","setFormValues","handleChange","placeholder","HomeComponent","isLoggedIn","setIsLoggedIn","loginFlag","removeItem","location","reload","flag","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42356db4.chunk.js","sourcesContent":["export const setItem = (key, val) => {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n}\r\n\r\nexport const getItem = (key, defaultValue) => {\r\n    const val = localStorage.getItem(key);\r\n    if (val) {\r\n        return JSON.parse(val);\r\n    }\r\n    return defaultValue || null;\r\n}\r\n\r\nexport const removeItem = (key) => {\r\n    localStorage.removeItem(key);\r\n}\r\n\r\nexport const SECRET_KEY = 'I4096';\r\nexport const SECRET_CODE = '4096';\r\n","export default __webpack_public_path__ + \"static/media/loader-icon.5af73140.gif\";","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setItem, getItem } from '../../util/index';\r\nimport LoaderIcon from '../../assets/loader-icon.gif';\r\n\r\nimport './header-bar.css';\r\nfunction HeaderBarComponent(props) {\r\n    let timerRef = null;\r\n    // const interval = 1000 * 60 * 10;\r\n    const maxLocations = 5;\r\n    const oneMinute = 1000 * 60;\r\n\r\n    const intervalOptions = [\r\n        {\r\n            value: oneMinute,\r\n            label: '1 Minute'\r\n        },\r\n        {\r\n            value: oneMinute * 2,\r\n            label: '2 Minutes'\r\n        },\r\n        {\r\n            value: oneMinute * 15,\r\n            label: '15 Minutes'\r\n        },\r\n        {\r\n            value: oneMinute * 30,\r\n            label: '30 Minutes'\r\n        },\r\n    ];\r\n\r\n    const LOCAL_STORAGE = {\r\n        AUTO_REFRESH_INTERVAL: 'AUTO_REFRESH_INTERVAL',\r\n        EMAIL_ID: 'EMAIL_ID',\r\n        AUTO_REFRESH_FLAG: 'AUTO_REFRESH_FLAG',\r\n        SEARCH_CONDITIONS: 'SEARCH_CONDITIONS',\r\n        STATES: 'STATES',\r\n        AGE_LIMIT_18: 'AGE_LIMIT_18',\r\n        AGE_LIMIT_45: 'AGE_LIMIT_45',\r\n        AGE_LIMIT_60: 'AGE_LIMIT_60'\r\n    }\r\n\r\n    const initialSearch = () => {\r\n        const fromCache = getItem(LOCAL_STORAGE.SEARCH_CONDITIONS, []);\r\n        if (fromCache.length > 0) {\r\n            return fromCache.map((itm, idx) => {\r\n                return {\r\n                    id: idx,\r\n                    districtList: itm.districtList,\r\n                    state: itm.state,\r\n                    state_name: itm.state_name,\r\n                    district: itm.district,\r\n                    district_name: itm.district_name,\r\n                    availableSlots: []\r\n                }\r\n            });\r\n        }\r\n\r\n        return [{\r\n            id: 0,\r\n            districtList: [],\r\n            state: '',\r\n            district: ''\r\n        }]\r\n    }\r\n\r\n    const [statesList, setStatesList] = useState([]);\r\n    const [searchConditions, setSearchConditions] = useState(initialSearch());\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [isAutoRefresh, setIsAutoRefresh] = useState(true);\r\n    const [refreshInterval, setRefreshInterval] = useState(oneMinute);\r\n    const [ageLimit18Plus, setAgeLimit18Plus] = useState(false);\r\n    const [ageLimit45Plus, setAgeLimit45Plus] = useState(false);\r\n    const [ageLimit60Plus, setAgeLimit60Plus] = useState(false);\r\n\r\n    const loadLastSearchedValues = () => {\r\n        const autoRefeshFlag = getItem(LOCAL_STORAGE.AUTO_REFRESH_FLAG, false);\r\n        setIsAutoRefresh(autoRefeshFlag);\r\n\r\n        const refreshInterval = getItem(LOCAL_STORAGE.AUTO_REFRESH_INTERVAL, oneMinute);\r\n        setRefreshInterval(refreshInterval);\r\n\r\n        const ageLimit18 = getItem(LOCAL_STORAGE.AGE_LIMIT_18, false);\r\n        setAgeLimit18Plus(ageLimit18);\r\n\r\n        const ageLimit45 = getItem(LOCAL_STORAGE.AGE_LIMIT_45, false);\r\n        setAgeLimit45Plus(ageLimit45);\r\n\r\n        const ageLimit60 = getItem(LOCAL_STORAGE.AGE_LIMIT_60, false);\r\n        setAgeLimit60Plus(ageLimit60);\r\n    }\r\n\r\n    const getStates = () => {\r\n        const statesFromCache = getItem(LOCAL_STORAGE.STATES, []);\r\n        if (statesFromCache.length > 0) {\r\n            setStatesList(statesFromCache);\r\n            return;\r\n        }\r\n\r\n        axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/states').then((resp) => {\r\n            if (resp && resp.data) {\r\n                const stateListArr = resp.data.states;\r\n                setItem(LOCAL_STORAGE.STATES, stateListArr);\r\n                setStatesList(resp.data.states);\r\n            }\r\n        })\r\n    }\r\n\r\n    const getDistricts = (stateId, cb) => {\r\n        const key = `DISTRICTS_${stateId}`\r\n        const fromCache = getItem(key, []);\r\n        if (fromCache.length > 0) {\r\n            cb(fromCache);\r\n            return;\r\n        }\r\n\r\n        axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/districts/' + stateId).then((resp) => {\r\n            if (resp && resp.data) {\r\n                const districtListArr = resp.data.districts;\r\n                setItem(key, districtListArr);\r\n                cb(districtListArr);\r\n            }\r\n        })\r\n    }\r\n\r\n    const searchDistricts = (evt, currentSearch) => {\r\n        const { value } = evt.target;\r\n\r\n        getDistricts(value, (resp) => {\r\n\r\n            const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n            if (currentConditionIndex > -1) {\r\n                searchConditions[currentConditionIndex].state = value;\r\n                const stateObj = statesList.find((itm) => itm.state_id == value);\r\n                if (stateObj) {\r\n                    searchConditions[currentConditionIndex].state_name = stateObj.state_name;\r\n                }\r\n\r\n                searchConditions[currentConditionIndex].districtList = resp;\r\n\r\n                setSearchConditions((prev) => {\r\n                    return [...searchConditions]\r\n                });\r\n                saveSearchConditions(searchConditions);\r\n            }\r\n        })\r\n    }\r\n\r\n    const setDistrict = (evt, currentSearch) => {\r\n        const { value } = evt.target;\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions[currentConditionIndex].district = value;\r\n\r\n            const districtObj = searchConditions[currentConditionIndex].districtList.find((itm) => itm.district_id == value);\r\n            if (districtObj) {\r\n                searchConditions[currentConditionIndex].district_name = districtObj.district_name;\r\n            }\r\n\r\n        }\r\n        setSearchConditions([...searchConditions]);\r\n        saveSearchConditions(searchConditions);\r\n    }\r\n\r\n    const saveSearchConditions = (searchList) => {\r\n        let seachParams = [];\r\n        if (searchList) {\r\n            seachParams = searchList.map((itm) => {\r\n                return {\r\n                    id: itm.id,\r\n                    state: itm.state,\r\n                    state_name: itm.state_name,\r\n                    district: itm.district,\r\n                    district_name: itm.district_name,\r\n                    districtList: itm.districtList,\r\n                    availableSlots: itm.availableSlots\r\n                }\r\n            })\r\n        }\r\n        setItem(LOCAL_STORAGE.SEARCH_CONDITIONS, seachParams);\r\n    }\r\n\r\n    const dateToDMY = (date) => {\r\n        var d = date.getDate();\r\n        var m = date.getMonth() + 1;\r\n        var y = date.getFullYear();\r\n        return '' + (d <= 9 ? '0' + d : d) + '-' + (m <= 9 ? '0' + m : m) + '-' + y;\r\n    }\r\n\r\n    const handleOnSearch = () => {\r\n        const searchParams = getItem(LOCAL_STORAGE.SEARCH_CONDITIONS, []);\r\n        if (searchParams.length > 0) {\r\n            searchParams.map((searchObj) => {\r\n                const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === searchObj.id);\r\n                if (currentConditionIndex > -1) {\r\n                    searchConditions[currentConditionIndex].isLoading = true;\r\n                    setSearchConditions([...searchConditions]);\r\n                }\r\n\r\n                const url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${searchObj.district}&date=${dateToDMY(new Date(selectedDate))}`; //18-05-2021\r\n                axios.get(url).then((resp) => {\r\n                    if (resp && resp.data) {\r\n                        analyzeData(searchObj, resp.data.centers)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    const analyzeData = (searchObj, data) => {\r\n        const availableSlots = [];\r\n        if (data.length > 0) {\r\n            data.map((center) => {\r\n                let availableSession = [];\r\n                let ageFilter = [];\r\n                if (ageLimit18Plus) {\r\n                    ageFilter.push(18);\r\n                }\r\n\r\n                if (ageLimit45Plus) {\r\n                    ageFilter.push(45);\r\n                }\r\n\r\n                if (ageLimit60Plus) {\r\n                    ageFilter.push(60);\r\n                }\r\n\r\n                let avlSession = (center.sessions || []);\r\n                if (ageFilter.length > 0) {\r\n\r\n                    avlSession = avlSession.filter((itm) => {\r\n                        return ageFilter.includes(itm.min_age_limit)\r\n                    })\r\n                }\r\n\r\n                avlSession.map((session) => {\r\n                    if (session.available_capacity > 0 ||\r\n                        session.available_capacity_dose1 > 0 ||\r\n                        session.available_capacity_dose2 > 0) {\r\n                        availableSession.push(session);\r\n\r\n                    }\r\n                })\r\n\r\n                if (availableSession.length > 1) {\r\n                    availableSlots.push({\r\n                        center: center,\r\n                        sessions: availableSession\r\n                    });\r\n                }\r\n            })\r\n        }\r\n\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === searchObj.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions[currentConditionIndex].isLoading = false;\r\n            searchConditions[currentConditionIndex].availableSlots = availableSlots;\r\n            setSearchConditions([...searchConditions]);\r\n            saveSearchConditions(searchConditions);\r\n        }\r\n    }\r\n\r\n    const addNewCondition = () => {\r\n        if (searchConditions.length === 5) {\r\n            return;\r\n        }\r\n\r\n        const newSearchConsitions = [...searchConditions, {\r\n            id: searchConditions.length,\r\n            districtList: [],\r\n            state: '',\r\n            district: '',\r\n            availableSlots: []\r\n        }];\r\n\r\n        setSearchConditions([...newSearchConsitions]);\r\n        saveSearchConditions(newSearchConsitions);\r\n    }\r\n\r\n    const deleteCondition = (currentSearch) => {\r\n        if (searchConditions.length === 1) {\r\n            return;\r\n        }\r\n\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions.splice(currentConditionIndex, 1);\r\n        }\r\n        setSearchConditions([...searchConditions]);\r\n        saveSearchConditions(searchConditions);\r\n    }\r\n\r\n    const initializeInterval = () => {\r\n        clearInterval();\r\n\r\n        const refInterval = parseInt(refreshInterval);\r\n        timerRef = window.setInterval(() => {\r\n            if (!isAutoRefresh) {\r\n                return false;\r\n            }\r\n\r\n            handleOnSearch();\r\n        }, refInterval)\r\n    }\r\n\r\n    const clearInterval = () => {\r\n        if (timerRef) {\r\n            window.clearInterval(timerRef);\r\n        }\r\n    }\r\n\r\n    const onHandleAutoRefresh = (evt) => {\r\n        const { checked } = evt.target;\r\n        setItem(LOCAL_STORAGE.AUTO_REFRESH_FLAG, checked)\r\n        setIsAutoRefresh(() => { return checked });\r\n        if (checked) {\r\n            restartInterval();\r\n        }\r\n    }\r\n\r\n    const onHandleIntervalChange = (evt) => {\r\n        const { value } = evt.target;\r\n        setItem(LOCAL_STORAGE.AUTO_REFRESH_INTERVAL, value)\r\n        setRefreshInterval(() => { return value; })\r\n        restartInterval();\r\n    }\r\n\r\n    const renderLoader = () => {\r\n        return <>\r\n            <button class=\"btn btn-secodary\" type=\"button\" disabled>\r\n                <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\">\r\n                </span>\r\n                <span className=\"ml-10\">Loading...</span>\r\n            </button>\r\n        </>\r\n    }\r\n\r\n    const restartInterval = () => {\r\n        clearInterval();\r\n        initializeInterval();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getStates();\r\n        loadLastSearchedValues();\r\n\r\n        restartInterval();\r\n\r\n        return () => {\r\n            clearInterval();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [searchConditions])\r\n\r\n    return (\r\n        <div className=\"header-section\">\r\n            <div className=\"row form-row\">\r\n                {(searchConditions || []).map((srch, index) => {\r\n                    return <div className=\"col-md-4 col-sm-6\" key={srch.id}>\r\n\r\n                        <h5>Location {index + 1}\r\n                            {searchConditions.length > 1 && <button className=\"btn text-danger btn-sm btn-del-location\" title=\"Delete location\" onClick={() => { deleteCondition(srch) }}>X</button>}\r\n                            {index === searchConditions.length - 1 && <button className=\"btn btn-info btn-sm btn-add-location\" onClick={addNewCondition}>+ Add Location</button>}\r\n\r\n                        </h5>\r\n\r\n                        <div class=\"input-group input-group-sm mb-3\">\r\n                            <span class=\"input-group-text\" id={`inputGroup-sizing-sm-s-${srch.id}`}>State</span>\r\n                            <select class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-s-${srch.id}`}\r\n                                value={srch.state}\r\n                                onChange={(evt) => {\r\n                                    searchDistricts(evt, srch)\r\n                                }}\r\n                            >\r\n                                <option>Select State</option>\r\n                                {statesList.map((state) => {\r\n                                    return <option value={state.state_id}>{state.state_name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"input-group input-group-sm mb-3\">\r\n                            <span class=\"input-group-text\" id={`inputGroup-sizing-sm-d-${srch.id}`}>District</span>\r\n                            <select class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-d-${srch.id}`}\r\n                                aria-label={`.district-select-sm example`}\r\n                                value={srch.district}\r\n                                onChange={(evt) => {\r\n                                    setDistrict(evt, srch)\r\n                                }}\r\n                            >\r\n                                <option>Select District</option>\r\n                                {srch.districtList && srch.districtList.map((district) => {\r\n                                    return <option value={district.district_id}>{district.district_name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                })}\r\n\r\n                <div className='col-md-4 col-sm-6'>\r\n\r\n                    <div class=\"input-group input-group-sm mb-3\">\r\n                        <span class=\"input-group-text\" id={`inputGroup-sizing-sm-dt`}>Date</span>\r\n                        <div class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-dt`}\r\n                            aria-label={`.district-select-sm example`}>\r\n                            <DatePicker selected={selectedDate} onChange={date => setSelectedDate(date)} dateFormat=\"dd-MM-yyyy\" />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"input-group input-group-sm mb-3\">\r\n                        <span class=\"input-group-text mr-20\" id={`inputGroup-sizing-sm-s-email`}>Age Limit</span>\r\n                        <div class=\"form-check age-limit-chkbox form-check-inline ml-10\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" checked={ageLimit18Plus} value={ageLimit18Plus} onChange={(evt) => {\r\n                                setAgeLimit18Plus(evt.target.checked)\r\n                                setItem(LOCAL_STORAGE.AGE_LIMIT_18, evt.target.checked);\r\n                            }} />\r\n                            <label class=\"form-check-label\" for=\"inlineCheckbox1\">18+</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline age-limit-chkbox\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" checked={ageLimit45Plus} value={ageLimit45Plus}\r\n                                onChange={(evt) => {\r\n                                    setAgeLimit45Plus(evt.target.checked)\r\n                                    setItem(LOCAL_STORAGE.AGE_LIMIT_45, evt.target.checked);\r\n                                }}\r\n                            />\r\n                            <label class=\"form-check-label\" for=\"inlineCheckbox2\">45+</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline age-limit-chkbox\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" checked={ageLimit60Plus} value={ageLimit60Plus}\r\n                                onChange={(evt) => {\r\n                                    setAgeLimit60Plus(evt.target.checked)\r\n                                    setItem(LOCAL_STORAGE.AGE_LIMIT_60, evt.target.checked);\r\n                                }} />\r\n                            <label class=\"form-check-label\" for=\"inlineCheckbox3\">60+</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" checked={isAutoRefresh} onChange={onHandleAutoRefresh} />\r\n                                <label class=\"form-check-label\" for=\"flexCheckChecked\">Auto Refresh</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div class=\"input-group input-group-sm mb-3\">\r\n                                <span class=\"input-group-text\" id={`inputGroup-sizing-sm-s-interval`}>Interval</span>\r\n                                <select class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-interval`} value={refreshInterval}\r\n                                    onChange={onHandleIntervalChange}\r\n                                    disabled={!isAutoRefresh}\r\n                                >\r\n                                    <option>Select Interval</option>\r\n                                    {intervalOptions.map((opt) => {\r\n                                        return <option value={opt.value}>{opt.label}</option>\r\n                                    })}\r\n                                </select>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-2 col-sm-6\">\r\n                    <button className=\"btn btn-sm btn-primary btn-block\" onClick={handleOnSearch}>Search</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row d-md-block d-lg-block d-sm-none d-xs-none d-none\">\r\n                {(searchConditions || []).map((srch) => {\r\n                    let ctr = 0;\r\n                    return <div className=\"col-md-12 slot-result-wrapper\">\r\n                        <h4>{srch.state_name} ({srch.district_name})</h4>\r\n                        {srch.isLoading &&\r\n                            <div className='loader-img'>\r\n                                {renderLoader()}\r\n                            </div>\r\n                        }\r\n                        {!srch.isLoading &&\r\n                            <table className=\"table table-dark table-striped table-sm table-hover table-slot-result\">\r\n                                <thead>\r\n                                    <tr>\r\n\r\n                                        <th>#</th>\r\n                                        <th>Fee Type</th>\r\n                                        <th>Fees</th>\r\n                                        <th>Vaccine</th>\r\n                                        <th>Age Limit</th>\r\n                                        <th>Avl Capacity</th>\r\n                                        <th>Avl Dose 1</th>\r\n                                        <th>Avl Dose 2</th>\r\n                                        <th>Date</th>\r\n                                        <th>Address</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {(srch.availableSlots || []).length === 0 && <tr><td colSpan=\"10\" className='no-record'>No slots found!</td></tr>}\r\n                                    {(srch.availableSlots || []).map((slot) => {\r\n                                        return (slot.sessions || []).map((session, indx) => {\r\n                                            return <tr>\r\n                                                <td>{++ctr}</td>\r\n                                                <td>{slot.center.fee_type}</td>\r\n                                                <td>{slot.center.vaccine_fees ? `${slot.center.vaccine_fees[0].fee} (${slot.center.vaccine_fees[0].vaccine})` : '0'}</td>\r\n                                                <td>{session.vaccine}</td>\r\n                                                <td>{session.min_age_limit}</td>\r\n                                                <td>{session.available_capacity}</td>\r\n                                                <td>{session.available_capacity_dose1}</td>\r\n                                                <td>{session.available_capacity_dose2}</td>\r\n                                                <td>{session.date}</td>\r\n                                                <td>{slot.center.name}, {slot.center.address}</td>\r\n\r\n                                            </tr>\r\n                                        })\r\n\r\n                                    })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"row d-lg-none d-md-none d-sm-block d-xs-block\">\r\n                {(searchConditions || []).map((srch) => {\r\n                    return <div className=\"col-md-12 slot-result-wrapper\">\r\n                        <h4>{srch.state_name} ({srch.district_name})</h4>\r\n                        {srch.isLoading &&\r\n                            <div className='loader-img'>\r\n                                {renderLoader()}\r\n                            </div>\r\n                        }\r\n\r\n                        {!srch.isLoading && <>\r\n                            {(srch.availableSlots || []).length === 0 && <div className='no-record'>No slots found!</div>}\r\n                            <div class=\"list-group\">\r\n                                {(srch.availableSlots || []).map((slot) => {\r\n                                    return (slot.sessions || []).map((session, indx) => {\r\n                                        return <a href=\"javascript:void(0)\" class=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                                            <div class=\"d-flex w-100 justify-content-between\">\r\n                                                <h5 class=\"mb-1\">\r\n                                                    Age Limit: {session.min_age_limit},\r\n                                                Rs. {slot.center.vaccine_fees ? `${slot.center.vaccine_fees[0].fee} (${slot.center.vaccine_fees[0].vaccine})` : '0'}\r\n                                                </h5>\r\n                                                <small>\r\n                                                    <span class=\"badge bg-primary\">{slot.center.fee_type}</span>\r\n                                                </small>\r\n                                            </div>\r\n                                            <p class=\"mb-1\">\r\n                                                Available Capacity: {session.available_capacity},{` `}\r\n                                                <b>Dose 1</b>: {session.available_capacity_dose1},{` `}\r\n                                                <b>Dose 2</b>: {session.available_capacity_dose2},\r\n                                                 </p>\r\n                                            <small>Vaccine: {session.vaccine}, Date: {session.date}</small>\r\n\r\n                                            <p><small>{slot.center.name}, {slot.center.address}</small></p>\r\n                                        </a>\r\n                                    })\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </>}\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderBarComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport { SECRET_CODE, SECRET_KEY } from '../../util';\r\nfunction LoginComponent(props) {\r\n    const { onHandleSubmit } = props;\r\n\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const [formValues, setFormValues] = useState({\r\n        secretCode: null,\r\n        secretKey: null\r\n    });\r\n\r\n    const handleChange = (evt) => {\r\n        const { id, value } = evt.target;\r\n        setFormValues((prev) => {\r\n            return {\r\n                ...prev,\r\n                [id]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setIsError(false);\r\n\r\n        const { secretCode, secretKey } = formValues;\r\n        if (!secretCode || !secretKey) {\r\n            return false;\r\n        }\r\n        const flag = SECRET_KEY === secretKey && SECRET_CODE === secretCode;\r\n\r\n        if (!flag) {\r\n            setIsError(true);\r\n            return;\r\n        }\r\n\r\n        onHandleSubmit && onHandleSubmit(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <div class=\"mb-3\">\r\n                <label for=\"secretCode\" class=\"form-label\">Code</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"secretCode\" placeholder=\"Enter code\" onChange={handleChange} />\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label for=\"secretKey\" class=\"form-label\">Secret Key</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"secretKey\" placeholder=\"Enter secret key\" onChange={handleChange} />\r\n            </div>\r\n\r\n\r\n            {isError && <div className='text-danger'>Invalid code and key. Please try with valid credentials. </div>}\r\n            <br />\r\n            <button type=\"button\" class=\"btn btn-primary btn-block\" disabled={!formValues.secretCode || !formValues.secretKey} onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport { setItem, getItem, removeItem } from '../../util';\r\nimport HeaderBarComponent from '../header-bar-component/index';\r\nimport LoginComponent from '../login-component/index';\r\n\r\nfunction HomeComponent() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const onHandleSubmit = (flag) => {\r\n        setIsLoggedIn(flag);\r\n        setItem('ISLG', flag);\r\n    }\r\n\r\n    const onHandleLogout = () => {\r\n        removeItem('ISLG');\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loginFlag = getItem('ISLG', false);\r\n        setIsLoggedIn(loginFlag);\r\n    }, [])\r\n\r\n    useEffect(() => { }, [isLoggedIn])\r\n\r\n    return (\r\n        <div className=\"row row-home\">\r\n\r\n\r\n            <div className=\"col-md-12\">\r\n\r\n                {!isLoggedIn\r\n                    ? <LoginComponent onHandleSubmit={onHandleSubmit} />\r\n                    : <>\r\n                        <figure class=\"text-center fig-app\">\r\n                            <blockquote class=\"blockquote\">\r\n                                <p>Vaccine Slot Finder.</p>\r\n                                <button className=\"btn btn-sm btn-danger btn-logout\" onClick={onHandleLogout}>Log Out</button>\r\n                            </blockquote>\r\n                            <figcaption class=\"blockquote-footer\">\r\n                                <cite title=\"Source Title\">Find slots at multiple locations together</cite>\r\n                            </figcaption>\r\n                        </figure>\r\n                        <HeaderBarComponent />\r\n                    </>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeComponent;\r\n","import './App.css';\nimport HomeComponent from './components/home-component';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}