{"version":3,"sources":["util/index.js","components/header-bar-component/index.js","components/login-component/index.js","components/home-component/index.js","App.js","index.js"],"names":["setItem","key","val","localStorage","JSON","stringify","getItem","defaultValue","parse","HeaderBarComponent","props","timerRef","oneMinute","intervalOptions","value","label","LOCAL_STORAGE","useState","statesList","setStatesList","fromCache","length","map","itm","idx","id","districtList","state","state_name","district","district_name","availableSlots","initialSearch","searchConditions","setSearchConditions","Date","selectedDate","setSelectedDate","isAutoRefresh","setIsAutoRefresh","refreshInterval","setRefreshInterval","ageLimit18Plus","setAgeLimit18Plus","ageLimit45Plus","setAgeLimit45Plus","dose1","setDose1","dose2","setDose2","timeLefToRefreshtMsg","setTimeLefToRefreshtMsg","searchDistricts","evt","currentSearch","target","stateId","cb","axios","get","then","resp","data","districtListArr","districts","getDistricts","currentConditionIndex","findIndex","stateObj","find","state_id","parseInt","prev","saveSearchConditions","searchList","seachParams","dateToDMY","date","d","getDate","m","getMonth","getFullYear","handleOnSearch","searchParams","searchObj","isLoading","url","analyzeData","centers","ageFilter","age18","age45","dose1Val","dose2Val","push","totalRecords","center","availableSession","avlSession","sessions","filter","indexOf","min_age_limit","available_capacity_dose1","available_capacity_dose2","session","addNewCondition","newSearchConsitions","initializeInterval","clearInterval","ctr","window","setInterval","refIntervalInSeconds","timeLeftBeforeRefresh","minutes","Math","floor","seconds","ceil","timeLeftMessage","join","renderLoader","className","type","disabled","role","aria-hidden","prototype","addDays","days","this","valueOf","setDate","useEffect","statesFromCache","stateListArr","states","getStates","autoRefeshFlag","ageLimit18","ageLimit45","firstDose","secondDose","loadLastSearchedValues","srch","index","title","onClick","splice","deleteCondition","aria-label","aria-describedby","onChange","districtObj","district_id","setDistrict","selected","dateFormat","checked","htmlFor","location","reload","opt","colSpan","slot","indx","fee_type","vaccine_fees","fee","vaccine","name","address","session_id","center_id","href","preventDefault","aria-current","LoginComponent","onHandleSubmit","isError","setIsError","secretCode","secretKey","formValues","setFormValues","handleChange","placeholder","HomeComponent","isLoggedIn","setIsLoggedIn","loginFlag","removeItem","flag","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45a22628.chunk.js","sourcesContent":["export const setItem = (key, val) => {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n}\r\n\r\nexport const getItem = (key, defaultValue) => {\r\n    const val = localStorage.getItem(key);\r\n    if (val) {\r\n        return JSON.parse(val);\r\n    }\r\n    return defaultValue || null;\r\n}\r\n\r\nexport const removeItem = (key) => {\r\n    localStorage.removeItem(key);\r\n}\r\n\r\nexport const SECRET_KEY = 'I4096';\r\nexport const SECRET_CODE = '4096';\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { setItem, getItem } from '../../util/index';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './header-bar.css';\r\nfunction HeaderBarComponent(props) {\r\n    let timerRef = null;\r\n    const oneMinute = 1000 * 60;\r\n\r\n    const intervalOptions = [\r\n        {\r\n            value: oneMinute / 4,\r\n            label: '15 Seconds'\r\n        },\r\n        {\r\n            value: oneMinute / 2,\r\n            label: '30 Seconds'\r\n        },\r\n        {\r\n            value: oneMinute,\r\n            label: '1 Minute'\r\n        },\r\n        {\r\n            value: oneMinute * 2,\r\n            label: '2 Minutes'\r\n        },\r\n        {\r\n            value: oneMinute * 15,\r\n            label: '15 Minutes'\r\n        },\r\n        {\r\n            value: oneMinute * 30,\r\n            label: '30 Minutes'\r\n        },\r\n    ];\r\n\r\n    const LOCAL_STORAGE = {\r\n        AUTO_REFRESH_INTERVAL: 'AUTO_REFRESH_INTERVAL',\r\n        EMAIL_ID: 'EMAIL_ID',\r\n        AUTO_REFRESH_FLAG: 'AUTO_REFRESH_FLAG',\r\n        SEARCH_CONDITIONS: 'SEARCH_CONDITIONS',\r\n        STATES: 'STATES',\r\n        AGE_LIMIT_18: 'AGE_LIMIT_18',\r\n        AGE_LIMIT_45: 'AGE_LIMIT_45',\r\n        AGE_LIMIT_60: 'AGE_LIMIT_60',\r\n        DOSE_1: 'DOSE_1',\r\n        DOSE_2: 'DOSE_2'\r\n    }\r\n\r\n    const initialSearch = () => {\r\n        const fromCache = getItem(LOCAL_STORAGE.SEARCH_CONDITIONS, []);\r\n        if (fromCache.length > 0) {\r\n            return fromCache.map((itm, idx) => {\r\n                return {\r\n                    id: idx,\r\n                    districtList: itm.districtList,\r\n                    state: itm.state,\r\n                    state_name: itm.state_name,\r\n                    district: itm.district,\r\n                    district_name: itm.district_name,\r\n                    availableSlots: []\r\n                }\r\n            });\r\n        }\r\n\r\n        return [{\r\n            id: 0,\r\n            districtList: [],\r\n            state: '',\r\n            district: ''\r\n        }]\r\n    }\r\n\r\n    const [statesList, setStatesList] = useState([]);\r\n    const [searchConditions, setSearchConditions] = useState(initialSearch());\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [isAutoRefresh, setIsAutoRefresh] = useState(false);\r\n    const [refreshInterval, setRefreshInterval] = useState(null);\r\n    const [ageLimit18Plus, setAgeLimit18Plus] = useState(false);\r\n    const [ageLimit45Plus, setAgeLimit45Plus] = useState(false);\r\n\r\n    const [dose1, setDose1] = useState(true);\r\n    const [dose2, setDose2] = useState(true);\r\n\r\n    const [timeLefToRefreshtMsg, setTimeLefToRefreshtMsg] = useState('');\r\n\r\n\r\n    const loadLastSearchedValues = () => {\r\n        const autoRefeshFlag = getItem(LOCAL_STORAGE.AUTO_REFRESH_FLAG, false);\r\n        setIsAutoRefresh(autoRefeshFlag);\r\n\r\n        const refreshInterval = getItem(LOCAL_STORAGE.AUTO_REFRESH_INTERVAL, oneMinute);\r\n        setRefreshInterval(parseInt(refreshInterval));\r\n\r\n        const ageLimit18 = getItem(LOCAL_STORAGE.AGE_LIMIT_18, false);\r\n        setAgeLimit18Plus(ageLimit18);\r\n\r\n        const ageLimit45 = getItem(LOCAL_STORAGE.AGE_LIMIT_45, false);\r\n        setAgeLimit45Plus(ageLimit45);\r\n\r\n        const firstDose = getItem(LOCAL_STORAGE.DOSE_1, false);\r\n        setDose1(firstDose);\r\n\r\n        const secondDose = getItem(LOCAL_STORAGE.DOSE_2, false);\r\n        setDose2(secondDose);\r\n    }\r\n\r\n    const getStates = () => {\r\n        const statesFromCache = getItem(LOCAL_STORAGE.STATES, []);\r\n        if (statesFromCache.length > 0) {\r\n            setStatesList(statesFromCache);\r\n            return;\r\n        }\r\n\r\n        axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/states').then((resp) => {\r\n            if (resp && resp.data) {\r\n                const stateListArr = resp.data.states;\r\n                setItem(LOCAL_STORAGE.STATES, stateListArr);\r\n                setStatesList(resp.data.states);\r\n            }\r\n        })\r\n    }\r\n\r\n    const getDistricts = (stateId, cb) => {\r\n        const key = `DISTRICTS_${stateId}`\r\n        const fromCache = getItem(key, []);\r\n        if (fromCache.length > 0) {\r\n            cb(fromCache);\r\n            return;\r\n        }\r\n\r\n        axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/districts/' + stateId).then((resp) => {\r\n            if (resp && resp.data) {\r\n                const districtListArr = resp.data.districts;\r\n                setItem(key, districtListArr);\r\n                cb(districtListArr);\r\n            }\r\n        })\r\n    }\r\n\r\n    const searchDistricts = (evt, currentSearch) => {\r\n        const { value } = evt.target;\r\n\r\n        getDistricts(value, (resp) => {\r\n\r\n            const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n            if (currentConditionIndex > -1) {\r\n                searchConditions[currentConditionIndex].state = value;\r\n                const stateObj = statesList.find((itm) => itm.state_id === parseInt(value));\r\n                if (stateObj) {\r\n                    searchConditions[currentConditionIndex].state_name = stateObj.state_name;\r\n                }\r\n\r\n                searchConditions[currentConditionIndex].districtList = resp;\r\n\r\n                setSearchConditions((prev) => {\r\n                    return [...searchConditions]\r\n                });\r\n                saveSearchConditions(searchConditions);\r\n            }\r\n        })\r\n    }\r\n\r\n    const setDistrict = (evt, currentSearch) => {\r\n        const { value } = evt.target;\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions[currentConditionIndex].district = value;\r\n\r\n            const districtObj = searchConditions[currentConditionIndex].districtList.find((itm) => itm.district_id === parseInt(value));\r\n            if (districtObj) {\r\n                searchConditions[currentConditionIndex].district_name = districtObj.district_name;\r\n            }\r\n\r\n        }\r\n        setSearchConditions([...searchConditions]);\r\n        saveSearchConditions(searchConditions);\r\n        handleOnSearch();\r\n    }\r\n\r\n    const saveSearchConditions = (searchList) => {\r\n        let seachParams = [];\r\n        if (searchList) {\r\n            seachParams = searchList.map((itm) => {\r\n                return {\r\n                    id: itm.id,\r\n                    state: itm.state,\r\n                    state_name: itm.state_name,\r\n                    district: itm.district,\r\n                    district_name: itm.district_name,\r\n                    districtList: itm.districtList,\r\n                    availableSlots: itm.availableSlots\r\n                }\r\n            })\r\n        }\r\n        setItem(LOCAL_STORAGE.SEARCH_CONDITIONS, seachParams);\r\n    }\r\n\r\n    const dateToDMY = (date) => {\r\n        var d = date.getDate();\r\n        var m = date.getMonth() + 1;\r\n        var y = date.getFullYear();\r\n        return '' + (d <= 9 ? '0' + d : d) + '-' + (m <= 9 ? '0' + m : m) + '-' + y;\r\n    }\r\n\r\n    const handleOnSearch = () => {\r\n        const searchParams = getItem(LOCAL_STORAGE.SEARCH_CONDITIONS, []);\r\n        if (searchParams.length > 0) {\r\n            searchParams.map((searchObj) => {\r\n                const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === searchObj.id);\r\n                if (currentConditionIndex > -1) {\r\n                    searchConditions[currentConditionIndex].isLoading = true;\r\n                    setSearchConditions([...searchConditions]);\r\n                }\r\n\r\n                const url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${searchObj.district}&date=${dateToDMY(new Date(selectedDate))}`; //18-05-2021\r\n                axios.get(url).then((resp) => {\r\n                    if (resp && resp.data) {\r\n                        analyzeData(searchObj, resp.data.centers)\r\n                    }\r\n                })\r\n\r\n                return true;\r\n            })\r\n        }\r\n    }\r\n\r\n    const analyzeData = (searchObj, data) => {\r\n        const availableSlots = [];\r\n        let ageFilter = [];\r\n\r\n        const age18 = getItem(LOCAL_STORAGE.AGE_LIMIT_18);\r\n        const age45 = getItem(LOCAL_STORAGE.AGE_LIMIT_45);\r\n\r\n        const dose1Val = getItem(LOCAL_STORAGE.DOSE_1)\r\n        const dose2Val = getItem(LOCAL_STORAGE.DOSE_2)\r\n\r\n        if (age18) {\r\n            ageFilter.push(18);\r\n        }\r\n\r\n        if (age45) {\r\n            ageFilter.push(45);\r\n        }\r\n\r\n        let totalRecords = 0;\r\n        if (data.length > 0) {\r\n            data.map((center) => {\r\n                let availableSession = [];\r\n                let avlSession = (center.sessions || []);\r\n                if (ageFilter.length > 0) {\r\n                    avlSession = avlSession.filter((itm) => {\r\n                        return ageFilter.indexOf(itm.min_age_limit) > -1\r\n                    })\r\n                }\r\n\r\n                if ((dose1Val && !dose2Val) || (dose2Val && !dose1Val)) {\r\n                    if (dose1Val) {\r\n                        avlSession = avlSession.filter((itm) => {\r\n                            return itm.available_capacity_dose1 > 0\r\n                        })\r\n                    }\r\n\r\n                    if (dose2Val) {\r\n                        avlSession = avlSession.filter((itm) => {\r\n                            return itm.available_capacity_dose2 > 0\r\n                        })\r\n                    }\r\n                }\r\n\r\n                avlSession.map((session) => {\r\n                    if (session.available_capacity_dose1 > 0 ||\r\n                        session.available_capacity_dose2 > 0) {\r\n                        availableSession.push(session);\r\n                    }\r\n\r\n                    return true;\r\n                })\r\n\r\n                if (availableSession.length > 1) {\r\n                    totalRecords += availableSession.length;\r\n                    availableSlots.push({\r\n                        center: center,\r\n                        sessions: availableSession\r\n                    });\r\n                }\r\n\r\n                return true;\r\n            })\r\n        }\r\n\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === searchObj.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions[currentConditionIndex].isLoading = false;\r\n            searchConditions[currentConditionIndex].availableSlots = availableSlots;\r\n            searchConditions[currentConditionIndex].totalRecords = totalRecords;\r\n            setSearchConditions([...searchConditions]);\r\n            saveSearchConditions(searchConditions);\r\n        }\r\n    }\r\n\r\n    const addNewCondition = () => {\r\n        if (searchConditions.length === 5) {\r\n            return;\r\n        }\r\n\r\n        const newSearchConsitions = [...searchConditions, {\r\n            id: searchConditions.length,\r\n            districtList: [],\r\n            state: '',\r\n            district: '',\r\n            availableSlots: []\r\n        }];\r\n\r\n        setSearchConditions([...newSearchConsitions]);\r\n        saveSearchConditions(newSearchConsitions);\r\n    }\r\n\r\n    const deleteCondition = (currentSearch) => {\r\n        if (searchConditions.length === 1) {\r\n            return;\r\n        }\r\n\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions.splice(currentConditionIndex, 1);\r\n        }\r\n        setSearchConditions([...searchConditions]);\r\n        saveSearchConditions(searchConditions);\r\n    }\r\n\r\n    const initializeInterval = () => {\r\n        clearInterval();\r\n\r\n        let ctr = 0;\r\n        timerRef = window.setInterval(() => {\r\n            const isAutoRefreshEnabled = getItem(LOCAL_STORAGE.AUTO_REFRESH_FLAG, false);\r\n            if (isAutoRefreshEnabled) {\r\n\r\n                const refIntervalInSeconds = parseInt(refreshInterval) / 1000;\r\n                ctr++;\r\n                if (ctr > refIntervalInSeconds) {\r\n                    ctr = 1;\r\n                }\r\n\r\n                let timeLeftBeforeRefresh = refIntervalInSeconds - ctr;\r\n\r\n                if (timeLeftBeforeRefresh) {\r\n                    const minutes = Math.floor(timeLeftBeforeRefresh / 60);\r\n                    const seconds = Math.ceil(timeLeftBeforeRefresh % 60);\r\n\r\n                    let timeLeftMessage = [];\r\n\r\n                    timeLeftMessage.push(minutes < 10 ? `0${minutes}m: ` : `${minutes}m:`);\r\n\r\n\r\n                    timeLeftMessage.push(seconds < 10 ? `0${seconds}s` : `${seconds}s`);\r\n                    setTimeLefToRefreshtMsg(timeLeftMessage.join(''));\r\n                }\r\n\r\n                if (ctr === refIntervalInSeconds) {\r\n                    handleOnSearch();\r\n                }\r\n\r\n            } else {\r\n                setTimeLefToRefreshtMsg('');\r\n                ctr = 0;\r\n                return;\r\n\r\n            }\r\n\r\n        }, 1000)\r\n    }\r\n\r\n    const clearInterval = () => {\r\n        if (timerRef) {\r\n            window.clearInterval(timerRef);\r\n        }\r\n    }\r\n\r\n    const onHandleAutoRefresh = (evt) => {\r\n        const { checked } = evt.target;\r\n        setItem(LOCAL_STORAGE.AUTO_REFRESH_FLAG, checked)\r\n        setIsAutoRefresh(() => { return checked });\r\n    }\r\n\r\n    const onHandleIntervalChange = (evt) => {\r\n        const { value } = evt.target;\r\n        setItem(LOCAL_STORAGE.AUTO_REFRESH_INTERVAL, value)\r\n        setRefreshInterval(() => { return value; })\r\n        window.location.reload();\r\n    }\r\n\r\n    const renderLoader = () => {\r\n        return <>\r\n            <button className=\"btn btn-secodary\" type=\"button\" disabled>\r\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\">\r\n                </span>\r\n                <span className=\"ml-10\">Loading...</span>\r\n            </button>\r\n        </>\r\n    }\r\n\r\n    Date.prototype.addDays = function (days) {\r\n        var date = new Date(this.valueOf());\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getStates();\r\n        loadLastSearchedValues();\r\n        initializeInterval();\r\n\r\n        return () => {\r\n            clearInterval();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n    }, [searchConditions, timeLefToRefreshtMsg, refreshInterval, ageLimit18Plus, ageLimit45Plus])\r\n\r\n    useEffect(() => {\r\n        initializeInterval();\r\n    }, [refreshInterval])\r\n\r\n    return (\r\n        <div className=\"header-section\">\r\n            <div className=\"row form-row\" key={`result-list`}>\r\n                {(searchConditions || []).map((srch, index) => {\r\n                    return <div className=\"col-md-4 col-sm-6\" key={`${srch.id}-${srch.district}-${index}-main`}>\r\n                        <h5 key={`${srch.id}-${srch.district}-${index}-h5`}>Location {index + 1}\r\n                            {searchConditions.length > 1 && <button className=\"btn text-danger btn-sm btn-del-location\" title=\"Delete location\" onClick={() => { deleteCondition(srch) }}>X</button>}\r\n                            {index === searchConditions.length - 1 && <button className=\"btn btn-info btn-sm btn-add-location\" onClick={addNewCondition}>+ Add Location</button>}\r\n\r\n                        </h5>\r\n\r\n                        <div className=\"input-group input-group-sm mb-3\" key={`${srch.id}-${srch.district}-${index}-div1`}>\r\n                            <span className=\"input-group-text\" id={`inputGroup-sizing-sm-s-${srch.id}`}>State</span>\r\n                            <select className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-s-${srch.id}`}\r\n                                value={srch.state}\r\n                                onChange={(evt) => {\r\n                                    searchDistricts(evt, srch)\r\n                                }}\r\n                            >\r\n                                <option>Select State</option>\r\n                                {statesList.map((state) => {\r\n                                    return <option value={state.state_id} key={`state-${state.state_id}`}>{state.state_name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"input-group input-group-sm mb-3\" key={`${srch.id}-${srch.district}-${index}-ig`}>\r\n                            <span className=\"input-group-text\" id={`inputGroup-sizing-sm-d-${srch.id}`}>District</span>\r\n                            <select className=\"form-control\" aria-describedby={`inputGroup-sizing-sm-d-${srch.id}`}\r\n                                aria-label={`.district-select-sm example`}\r\n                                value={srch.district}\r\n                                onChange={(evt) => {\r\n                                    setDistrict(evt, srch)\r\n                                }}\r\n                            >\r\n                                <option>Select District</option>\r\n                                {srch.districtList && srch.districtList.map((district) => {\r\n                                    return <option value={district.district_id} key={`district-${district.district_id}`}>{district.district_name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                })}\r\n\r\n                <div className='col-md-4 col-sm-6'>\r\n                    <div className=\"input-group input-group-sm mb-3\">\r\n                        <span className=\"input-group-text\" id={`inputGroup-sizing-sm-dt`}>Date</span>\r\n                        <div className=\"form-control\" aria-describedby={`inputGroup-sizing-sm-dt`}\r\n                            aria-label={`.district-select-sm example`}>\r\n                            <DatePicker selected={selectedDate}\r\n                                onChange={date => {\r\n                                    setSelectedDate(date)\r\n                                    handleOnSearch();\r\n                                }}\r\n                                dateFormat=\"dd-MM-yyyy\"\r\n                            />\r\n                            <span className=\"float-right\"> to <small>{dateToDMY(new Date(selectedDate).addDays(5))}\r\n                            </small></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-group input-group-sm mb-3\">\r\n                        <span className=\"input-group-text mr-20\" id={`inputGroup-sizing-sm-s-email`}>Age Limit</span>\r\n                        <div className=\"form-check age-limit-chkbox form-check-inline ml-10\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" checked={ageLimit18Plus} value={ageLimit18Plus} onChange={(evt) => {\r\n                                setAgeLimit18Plus(evt.target.checked)\r\n                                setItem(LOCAL_STORAGE.AGE_LIMIT_18, evt.target.checked);\r\n                                handleOnSearch();\r\n                            }} />\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">18+</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline age-limit-chkbox\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" checked={ageLimit45Plus} value={ageLimit45Plus}\r\n                                onChange={(evt) => {\r\n                                    setAgeLimit45Plus(evt.target.checked)\r\n                                    setItem(LOCAL_STORAGE.AGE_LIMIT_45, evt.target.checked);\r\n                                    handleOnSearch();\r\n                                }}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">45+</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-group input-group-sm mb-3\">\r\n                        <span className=\"input-group-text mr-20\" id={`inputGroup-sizing-sm-s-email`}>Dose</span>\r\n                        <div className=\"form-check age-limit-chkbox form-check-inline ml-10\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"dose1\" checked={dose1} value={dose1} onChange={(evt) => {\r\n                                setDose1(evt.target.checked)\r\n                                setItem(LOCAL_STORAGE.DOSE_1, evt.target.checked);\r\n                                handleOnSearch();\r\n                            }} />\r\n                            <label className=\"form-check-label\" htmlFor=\"dose1\">First</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline age-limit-chkbox\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"dose2\" checked={dose2} value={dose2}\r\n                                onChange={(evt) => {\r\n                                    setDose2(evt.target.checked)\r\n                                    setItem(LOCAL_STORAGE.DOSE_2, evt.target.checked);\r\n                                    handleOnSearch();\r\n                                }}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"dose2\">Second</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" checked={isAutoRefresh} onChange={onHandleAutoRefresh} />\r\n                                <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">Auto Refresh</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"input-group input-group-sm mb-3\">\r\n                                <span className=\"input-group-text\" id={`inputGroup-sizing-sm-s-interval`}>Interval</span>\r\n                                <select className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-interval`} value={refreshInterval || ''}\r\n                                    onChange={onHandleIntervalChange}\r\n                                    disabled={!isAutoRefresh}\r\n                                >\r\n                                    <option>Select Interval</option>\r\n                                    {intervalOptions.map((opt) => {\r\n                                        return <option value={opt.value} key={`int-${opt.value}`}>{opt.label}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-2 col-sm-6\">\r\n                    <button className=\"btn btn-sm btn-primary btn-block\" onClick={handleOnSearch}>Search</button>\r\n                    {isAutoRefresh && <span><small>Auto-Refreshing in {timeLefToRefreshtMsg}</small></span>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row d-md-block d-lg-block d-sm-none d-xs-none d-none\">\r\n                {(searchConditions || []).map((srch, index) => {\r\n                    let ctr = 0;\r\n                    return <div className=\"col-md-12 slot-result-wrapper\" key={`${srch.center_id}-${index}`}>\r\n                        <h4>{srch.state_name} ({srch.district_name})\r\n                        {srch.totalRecords > 0 && <small className='float-right record-count' >{srch.totalRecords} records</small>}\r\n                        </h4>\r\n\r\n                        {srch.isLoading &&\r\n                            <div className='loader-img'>\r\n                                {renderLoader()}\r\n                            </div>\r\n                        }\r\n                        {!srch.isLoading &&\r\n                            <table className=\"table table-dark table-striped table-sm table-hover table-slot-result\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Fee Type</th>\r\n                                        <th>Fees</th>\r\n                                        <th>Vaccine</th>\r\n                                        <th>Age Limit</th>\r\n                                        <th>Dose 1</th>\r\n                                        <th>Dose 2</th>\r\n                                        <th>Date</th>\r\n                                        <th>Address</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {(srch.availableSlots || []).length === 0 && <tr><td colSpan=\"10\" className='no-record'>No slots found!</td></tr>}\r\n                                    {(srch.availableSlots || []).map((slot) => {\r\n                                        return (slot.sessions || []).map((session, indx) => {\r\n                                            return <tr key={session.session_id}>\r\n                                                <td>{++ctr}</td>\r\n                                                <td>{slot.center.fee_type}</td>\r\n                                                <td>{slot.center.vaccine_fees ? `${slot.center.vaccine_fees[0].fee} (${slot.center.vaccine_fees[0].vaccine})` : '0'}</td>\r\n                                                <td>{session.vaccine}</td>\r\n                                                <td>{session.min_age_limit}</td>\r\n                                                <td>{session.available_capacity_dose1}</td>\r\n                                                <td>{session.available_capacity_dose2}</td>\r\n                                                <td>{session.date}</td>\r\n                                                <td>{slot.center.name}, {slot.center.address}</td>\r\n                                            </tr>\r\n                                        })\r\n\r\n                                    })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"row d-lg-none d-md-none d-sm-block d-xs-block\">\r\n                {(searchConditions || []).map((srch) => {\r\n                    return <div className=\"col-md-12 slot-result-wrapper\" key={`${srch.center_id}-mob`}>\r\n                        <h4>{srch.state_name} ({srch.district_name})\r\n                        {srch.totalRecords > 0 && <small className='float-right record-count' >{srch.totalRecords} records</small>}\r\n                        </h4>\r\n\r\n                        {srch.isLoading &&\r\n                            <div className='loader-img'>\r\n                                {renderLoader()}\r\n                            </div>\r\n                        }\r\n\r\n                        {!srch.isLoading && <>\r\n                            {(srch.availableSlots || []).length === 0 && <div className='no-record'>No slots found!</div>}\r\n                            <div className=\"list-group\">\r\n                                {(srch.availableSlots || []).map((slot) => {\r\n                                    return (slot.sessions || []).map((session, indx) => {\r\n                                        return <a href=\"#\" onClick={(evt) => { evt.preventDefault(); return false; }} className=\"list-group-item list-group-item-action\" aria-current=\"true\" key={`a-${session.session_id}`}>\r\n                                            <div className=\"d-flex w-100 justify-content-between\">\r\n                                                <h5 className=\"mb-1\">\r\n                                                    Age Limit: {session.min_age_limit}\r\n                                                    {slot.center.fee_type != 'Free'\r\n                                                        && <>\r\n                                                            {slot.center.vaccine_fees ? `, Rs. ${slot.center.vaccine_fees[0].fee} (${slot.center.vaccine_fees[0].vaccine})` : ''}</>}\r\n                                                </h5>\r\n                                                <small>\r\n                                                    <span className={`badge ${slot.center.fee_type === 'Free' ? 'bg-primary' : 'bg-info'}`}>{slot.center.fee_type}</span>\r\n                                                </small>\r\n                                            </div>\r\n\r\n                                            <p className=\"mb-1\">\r\n                                                First Dose: <b>{session.available_capacity_dose1}</b>,{` `}\r\n                                                Second Dose: <b>{session.available_capacity_dose2}</b>,\r\n                                            </p>\r\n\r\n                                            <p className='mb-2'><small>{slot.center.name}, {slot.center.address}</small></p>\r\n                                            <p className='mb-0'>\r\n                                                <small><span className=\"badge bg-secondary\">{session.vaccine}</span></small>\r\n                                                <small><span className=\"badge bg-secondary ml-10\">{session.date}</span></small>\r\n                                            </p>\r\n                                        </a>\r\n                                    })\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </>}\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderBarComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport { SECRET_CODE, SECRET_KEY } from '../../util';\r\nfunction LoginComponent(props) {\r\n    const { onHandleSubmit } = props;\r\n\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const [formValues, setFormValues] = useState({\r\n        secretCode: null,\r\n        secretKey: null\r\n    });\r\n\r\n    const handleChange = (evt) => {\r\n        const { id, value } = evt.target;\r\n        setFormValues((prev) => {\r\n            return {\r\n                ...prev,\r\n                [id]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setIsError(false);\r\n\r\n        const { secretCode, secretKey } = formValues;\r\n        if (!secretCode || !secretKey) {\r\n            return false;\r\n        }\r\n        const flag = SECRET_KEY === secretKey && SECRET_CODE === secretCode;\r\n\r\n        if (!flag) {\r\n            setIsError(true);\r\n            return;\r\n        }\r\n\r\n        onHandleSubmit && onHandleSubmit(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"secretCode\" className=\"form-label\">Code</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"secretCode\" placeholder=\"Enter code\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"secretKey\" className=\"form-label\">Secret Key</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"secretKey\" placeholder=\"Enter secret key\" onChange={handleChange} />\r\n            </div>\r\n\r\n\r\n            {isError && <div className='text-danger'>Invalid code and key. Please try with valid credentials. </div>}\r\n            <br />\r\n            <button type=\"button\" className=\"btn btn-primary btn-block\" disabled={!formValues.secretCode || !formValues.secretKey} onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport { setItem, getItem, removeItem } from '../../util';\r\nimport HeaderBarComponent from '../header-bar-component/index';\r\nimport LoginComponent from '../login-component/index';\r\n\r\nfunction HomeComponent() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const onHandleSubmit = (flag) => {\r\n        setIsLoggedIn(flag);\r\n        setItem('ISLG', flag);\r\n    }\r\n\r\n    const onHandleLogout = () => {\r\n        removeItem('ISLG');\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loginFlag = getItem('ISLG', false);\r\n        setIsLoggedIn(loginFlag);\r\n    }, [])\r\n\r\n    useEffect(() => { }, [isLoggedIn])\r\n\r\n    return (\r\n        <div className=\"row row-home\">\r\n\r\n\r\n            <div className=\"col-md-12\">\r\n\r\n                {!isLoggedIn\r\n                    ? <LoginComponent onHandleSubmit={onHandleSubmit} />\r\n                    : <>\r\n                        <figure className=\"text-center fig-app\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p>Vaccine Slot Finder.</p>\r\n                                <button className=\"btn btn-sm btn-danger btn-logout\" onClick={onHandleLogout}>Log Out</button>\r\n                            </blockquote>\r\n                            <figcaption className=\"blockquote-footer\">\r\n                                <cite title=\"Source Title\">Find slots at multiple locations together</cite>\r\n                            </figcaption>\r\n                        </figure>\r\n                        <HeaderBarComponent />\r\n                    </>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeComponent;\r\n","import './App.css';\nimport HomeComponent from './components/home-component';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}