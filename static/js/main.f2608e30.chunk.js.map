{"version":3,"sources":["util/index.js","components/header-bar-component/index.js","components/login-component/index.js","components/home-component/index.js","App.js","index.js"],"names":["setItem","key","val","localStorage","JSON","stringify","getItem","defaultValue","parse","HeaderBarComponent","props","timerRef","oneMinute","intervalOptions","value","label","LOCAL_STORAGE","useState","statesList","setStatesList","fromCache","length","map","itm","idx","id","districtList","state","state_name","district","district_name","availableSlots","initialSearch","searchConditions","setSearchConditions","Date","selectedDate","setSelectedDate","isAutoRefresh","setIsAutoRefresh","emailId","setEmailId","refreshInterval","setRefreshInterval","searchDistricts","evt","currentSearch","target","stateId","cb","axios","get","then","resp","data","districtListArr","districts","getDistricts","currentConditionIndex","findIndex","stateObj","find","state_id","saveSearchConditions","searchList","seachParams","handleOnSearch","searchParams","searchObj","url","date","d","getDate","m","getMonth","getFullYear","dateToDMY","analyzeData","centers","center","availableSession","sessions","session","available_capacity","available_capacity_dose1","available_capacity_dose2","push","sendEmail","message","avl","fee_type","vaccine_fees","fee","vaccine","min_age_limit","name","address","service_id","template_id","user_id","template_params","post","catch","error","addNewCondition","newSearchConsitions","initializeInterval","clearInterval","window","setInterval","useEffect","statesFromCache","stateListArr","states","getStates","emailID","autoRefeshFlag","loadLastSearchedValues","className","srch","index","title","onClick","splice","deleteCondition","class","aria-label","aria-describedby","onChange","districtObj","district_id","setDistrict","selected","dateFormat","placeholder","type","checked","for","opt","ctr","colSpan","slot","indx","href","aria-current","LoginComponent","onHandleSubmit","isError","setIsError","secretCode","secretKey","formValues","setFormValues","handleChange","prev","disabled","HomeComponent","isLoggedIn","setIsLoggedIn","loginFlag","removeItem","location","reload","flag","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2608e30.chunk.js","sourcesContent":["export const setItem = (key, val) => {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n}\r\n\r\nexport const getItem = (key, defaultValue) => {\r\n    const val = localStorage.getItem(key);\r\n    if (val) {\r\n        return JSON.parse(val);\r\n    }\r\n    return defaultValue || null;\r\n}\r\n\r\nexport const removeItem = (key) => {\r\n    localStorage.removeItem(key);\r\n}\r\n\r\nexport const SECRET_KEY = 'I4096';\r\nexport const SECRET_CODE = '4096';\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setItem, getItem } from '../../util/index';\r\n\r\nimport './header-bar.css';\r\nfunction HeaderBarComponent(props) {\r\n    let timerRef = null;\r\n    // const interval = 1000 * 60 * 10;\r\n    const maxLocations = 5;\r\n    const oneMinute = 1000 * 60;\r\n\r\n    const intervalOptions = [\r\n        {\r\n            value: oneMinute,\r\n            label: '1 Minute'\r\n        },\r\n        {\r\n            value: oneMinute * 2,\r\n            label: '2 Minutes'\r\n        },\r\n        {\r\n            value: oneMinute * 15,\r\n            label: '15 Minutes'\r\n        },\r\n        {\r\n            value: oneMinute * 30,\r\n            label: '30 Minutes'\r\n        },\r\n    ];\r\n\r\n    const LOCAL_STORAGE = {\r\n        AUTO_REFRESH_INTERVAL: 'AUTO_REFRESH_INTERVAL',\r\n        EMAIL_ID: 'EMAIL_ID',\r\n        AUTO_REFRESH_FLAG: 'AUTO_REFRESH_FLAG',\r\n        SEARCH_CONDITIONS: 'SEARCH_CONDITIONS',\r\n        STATES: 'STATES'\r\n    }\r\n\r\n    const initialSearch = () => {\r\n        const fromCache = getItem(LOCAL_STORAGE.SEARCH_CONDITIONS, []);\r\n        if (fromCache.length > 0) {\r\n            return fromCache.map((itm, idx) => {\r\n                return {\r\n                    id: idx,\r\n                    districtList: itm.districtList,\r\n                    state: itm.state,\r\n                    state_name: itm.state_name,\r\n                    district: itm.district,\r\n                    district_name: itm.district_name,\r\n                    availableSlots: []\r\n                }\r\n            });\r\n        }\r\n\r\n        return [{\r\n            id: 0,\r\n            districtList: [],\r\n            state: '',\r\n            district: ''\r\n        }]\r\n    }\r\n\r\n    const [statesList, setStatesList] = useState([]);\r\n    const [searchConditions, setSearchConditions] = useState(initialSearch());\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [isAutoRefresh, setIsAutoRefresh] = useState(true);\r\n    const [emailId, setEmailId] = useState('');\r\n    const [refreshInterval, setRefreshInterval] = useState(oneMinute);\r\n\r\n    const loadLastSearchedValues = () => {\r\n        const emailID = getItem(LOCAL_STORAGE.EMAIL_ID, '');\r\n        if (emailID) {\r\n            setEmailId(emailID);\r\n        }\r\n\r\n        const autoRefeshFlag = getItem(LOCAL_STORAGE.AUTO_REFRESH_FLAG, false);\r\n        setIsAutoRefresh(autoRefeshFlag);\r\n\r\n        const refreshInterval = getItem(LOCAL_STORAGE.AUTO_REFRESH_INTERVAL, oneMinute);\r\n        if (refreshInterval) {\r\n            setRefreshInterval(refreshInterval);\r\n        }\r\n    }\r\n\r\n    const getStates = () => {\r\n        const statesFromCache = getItem(LOCAL_STORAGE.STATES, []);\r\n        if (statesFromCache.length > 0) {\r\n            setStatesList(statesFromCache);\r\n            return;\r\n        }\r\n\r\n        axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/states').then((resp) => {\r\n            if (resp && resp.data) {\r\n                const stateListArr = resp.data.states;\r\n                setItem(LOCAL_STORAGE.STATES, stateListArr);\r\n                setStatesList(resp.data.states);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const getDistricts = (stateId, cb) => {\r\n        const key = `DISTRICTS_${stateId}`\r\n        const fromCache = getItem(key, []);\r\n        if (fromCache.length > 0) {\r\n            cb(fromCache);\r\n            return;\r\n        }\r\n\r\n        axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/districts/' + stateId).then((resp) => {\r\n            if (resp && resp.data) {\r\n                const districtListArr = resp.data.districts;\r\n                setItem(key, districtListArr);\r\n                cb(districtListArr);\r\n            }\r\n        })\r\n    }\r\n\r\n    const searchDistricts = (evt, currentSearch) => {\r\n        const { value } = evt.target;\r\n\r\n        getDistricts(value, (resp) => {\r\n\r\n            const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n            if (currentConditionIndex > -1) {\r\n                searchConditions[currentConditionIndex].state = value;\r\n                const stateObj = statesList.find((itm) => itm.state_id == value);\r\n                if (stateObj) {\r\n                    searchConditions[currentConditionIndex].state_name = stateObj.state_name;\r\n                }\r\n                searchConditions[currentConditionIndex].districtList = resp;\r\n            }\r\n            setSearchConditions([...searchConditions]);\r\n            saveSearchConditions(searchConditions);\r\n        })\r\n    }\r\n\r\n    const setDistrict = (evt, currentSearch) => {\r\n        const { value } = evt.target;\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions[currentConditionIndex].district = value;\r\n\r\n            const districtObj = searchConditions[currentConditionIndex].districtList.find((itm) => itm.district_id == value);\r\n            if (districtObj) {\r\n                searchConditions[currentConditionIndex].district_name = districtObj.district_name;\r\n            }\r\n\r\n        }\r\n        setSearchConditions([...searchConditions]);\r\n        saveSearchConditions(searchConditions);\r\n    }\r\n\r\n    const saveSearchConditions = (searchList) => {\r\n        let seachParams = [];\r\n        if (searchList) {\r\n            seachParams = searchList.map((itm) => {\r\n                return {\r\n                    id: itm.id,\r\n                    state: itm.state,\r\n                    state_name: itm.state_name,\r\n                    district: itm.district,\r\n                    district_name: itm.district_name,\r\n                    districtList: itm.districtList,\r\n                    availableSlots: itm.availableSlots\r\n                }\r\n            })\r\n        }\r\n        setItem(LOCAL_STORAGE.SEARCH_CONDITIONS, seachParams);\r\n    }\r\n\r\n\r\n\r\n    const dateToDMY = (date) => {\r\n        var d = date.getDate();\r\n        var m = date.getMonth() + 1;\r\n        var y = date.getFullYear();\r\n        return '' + (d <= 9 ? '0' + d : d) + '-' + (m <= 9 ? '0' + m : m) + '-' + y;\r\n    }\r\n\r\n    const handleOnSearch = () => {\r\n        const searchParams = getItem(LOCAL_STORAGE.SEARCH_CONDITIONS, []);\r\n        if (searchParams.length > 0) {\r\n            searchParams.map((searchObj) => {\r\n                const url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${searchObj.district}&date=${dateToDMY(new Date(selectedDate))}`; //18-05-2021\r\n                axios.get(url).then((resp) => {\r\n                    if (resp && resp.data) {\r\n                        analyzeData(searchObj, resp.data.centers)\r\n                    }\r\n                })\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    const analyzeData = (searchObj, data) => {\r\n        const availableSlots = [];\r\n        if (data.length > 0) {\r\n            data.map((center) => {\r\n                let availableSession = [];\r\n                (center.sessions || []).map((session) => {\r\n                    if (session.available_capacity > 0 ||\r\n                        session.available_capacity_dose1 > 0 ||\r\n                        session.available_capacity_dose2 > 0) {\r\n                        availableSession.push(session);\r\n\r\n                    }\r\n                })\r\n\r\n                if (availableSession.length > 1) {\r\n                    availableSlots.push({\r\n                        center: center,\r\n                        sessions: availableSession\r\n                    });\r\n                }\r\n            })\r\n        }\r\n\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === searchObj.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions[currentConditionIndex].availableSlots = availableSlots;\r\n            setSearchConditions([...searchConditions]);\r\n            saveSearchConditions(searchConditions);\r\n        }\r\n\r\n        if (availableSlots.length > 0) {\r\n            sendEmail(availableSlots);\r\n        }\r\n    }\r\n\r\n    const sendEmail = (availableSlots) => {\r\n        if (!emailId) {\r\n            return;\r\n        }\r\n\r\n        let message = ``;\r\n        availableSlots && availableSlots.map((avl) => {\r\n            avl.sessions.map((session) => {\r\n                message = `${message}-------------------------------------------------------------------------------------------\r\n            Fee Type: ${avl.center.fee_type}, \r\n            Fees: ${avl.center.vaccine_fees ? `${avl.center.vaccine_fees[0].fee} (${avl.center.vaccine_fees[0].vaccine})` : '0'},\r\n            Vaccine: ${session.vaccine},\r\n            Age Limit: ${session.min_age_limit},\r\n            Avl Capacity: ${session.available_capacity},\r\n            Dose 1: ${session.available_capacity_dose1},\r\n            Dose 2: ${session.available_capacity_dose2},\r\n            Date: ${session.date},\r\n            Address: ${avl.center.name}, ${avl.center.address}\r\n        `;\r\n            })\r\n        })\r\n\r\n        var data = {\r\n            service_id: 'service_d7elxlo',\r\n            template_id: 'template_91dx2y5',\r\n            user_id: 'user_OpcKVh9JRegJpoIecK0rs',\r\n            template_params: {\r\n                'to_email': emailId,\r\n                'from_name': 'Sunil Kumar',\r\n                'message': message\r\n            }\r\n        };\r\n\r\n        axios.post('https://api.emailjs.com/api/v1.0/email/send', data\r\n        ).then(() => {\r\n            //alert('Your mail is sent!');\r\n        }).catch((error) => {\r\n            //alert('Oops... ' + JSON.stringify(error));\r\n        });\r\n    }\r\n\r\n\r\n    const addNewCondition = () => {\r\n        if (searchConditions.length === 5) {\r\n            return;\r\n        }\r\n\r\n        const newSearchConsitions = [...searchConditions, {\r\n            id: searchConditions.length,\r\n            districtList: [],\r\n            state: '',\r\n            district: '',\r\n            availableSlots: []\r\n        }];\r\n\r\n        setSearchConditions([...newSearchConsitions]);\r\n        saveSearchConditions(newSearchConsitions);\r\n    }\r\n\r\n    const deleteCondition = (currentSearch) => {\r\n        if (searchConditions.length === 1) {\r\n            return;\r\n        }\r\n\r\n        const currentConditionIndex = searchConditions.findIndex((itm) => itm.id === currentSearch.id);\r\n        if (currentConditionIndex > -1) {\r\n            searchConditions.splice(currentConditionIndex, 1);\r\n        }\r\n        setSearchConditions([...searchConditions]);\r\n        saveSearchConditions(searchConditions);\r\n    }\r\n\r\n\r\n    const initializeInterval = () => {\r\n        clearInterval();\r\n\r\n        timerRef = window.setInterval(() => {\r\n            if (!isAutoRefresh) {\r\n                return false;\r\n            }\r\n\r\n            handleOnSearch();\r\n        }, refreshInterval)\r\n    }\r\n\r\n    const clearInterval = () => {\r\n        if (timerRef) {\r\n            window.clearInterval(timerRef);\r\n        }\r\n    }\r\n\r\n\r\n    const onHandleAutoRefresh = (evt) => {\r\n        const { checked } = evt.target;\r\n        setItem(LOCAL_STORAGE.AUTO_REFRESH_FLAG, checked)\r\n        setIsAutoRefresh(checked)\r\n        if (checked) {\r\n            initializeInterval();\r\n        }\r\n    }\r\n\r\n    const onHandleEmailChange = (evt) => {\r\n        const { value } = evt.target;\r\n        setItem(LOCAL_STORAGE.EMAIL_ID, value)\r\n        setEmailId(value)\r\n    }\r\n\r\n    const onHandleIntervalChange = (evt) => {\r\n        const { value } = evt.target;\r\n        setItem(LOCAL_STORAGE.AUTO_REFRESH_INTERVAL, value)\r\n        setRefreshInterval(value)\r\n        initializeInterval();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getStates();\r\n        loadLastSearchedValues();\r\n        initializeInterval();\r\n\r\n        return () => {\r\n            clearInterval();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [searchConditions])\r\n\r\n    return (\r\n        <div className=\"header-section\">\r\n            <div className=\"row form-row\">\r\n                {(searchConditions || []).map((srch, index) => {\r\n                    return <div className=\"col-md-4 col-sm-6\" key={srch.id}>\r\n\r\n                        <h5>Location {index + 1}\r\n                            {searchConditions.length > 1 && <button className=\"btn text-danger btn-sm btn-del-location\" title=\"Delete location\" onClick={() => { deleteCondition(srch) }}>X</button>}\r\n                            {index === searchConditions.length - 1 && <button className=\"btn btn-info btn-sm btn-add-location\" onClick={addNewCondition}>+ Add Location</button>}\r\n\r\n                        </h5>\r\n\r\n                        <div class=\"input-group input-group-sm mb-3\">\r\n                            <span class=\"input-group-text\" id={`inputGroup-sizing-sm-s-${srch.id}`}>State</span>\r\n                            <select class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-s-${srch.id}`}\r\n                                value={srch.state}\r\n                                onChange={(evt) => {\r\n                                    searchDistricts(evt, srch)\r\n                                }}\r\n                            >\r\n                                <option>Select State</option>\r\n                                {statesList.map((state) => {\r\n                                    return <option value={state.state_id}>{state.state_name}</option>\r\n                                })}\r\n                            </select>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class=\"input-group input-group-sm mb-3\">\r\n                            <span class=\"input-group-text\" id={`inputGroup-sizing-sm-d-${srch.id}`}>District</span>\r\n                            <select class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-d-${srch.id}`}\r\n                                aria-label={`.district-select-sm example`}\r\n                                value={srch.district}\r\n                                onChange={(evt) => {\r\n                                    setDistrict(evt, srch)\r\n                                }}\r\n                            >\r\n                                <option>Select District</option>\r\n                                {srch.districtList && srch.districtList.map((district) => {\r\n                                    return <option value={district.district_id}>{district.district_name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                })}\r\n\r\n                <div className='col-md-4 col-sm-6'>\r\n\r\n                    <div class=\"input-group input-group-sm mb-3\">\r\n                        <span class=\"input-group-text\" id={`inputGroup-sizing-sm-dt`}>Date</span>\r\n                        <div class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-dt`}\r\n                            aria-label={`.district-select-sm example`}>\r\n                            <DatePicker selected={selectedDate} onChange={date => setSelectedDate(date)} dateFormat=\"dd-MM-yyyy\" />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"input-group input-group-sm mb-3\">\r\n                        <span class=\"input-group-text\" id={`inputGroup-sizing-sm-s-email`}>Notify on email</span>\r\n                        <input class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-email`} placeholder=\"example@gmail.com\"\r\n                            value={emailId}\r\n                            onChange={onHandleEmailChange}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" checked={isAutoRefresh} onChange={onHandleAutoRefresh} />\r\n                                <label class=\"form-check-label\" for=\"flexCheckChecked\">Auto Refresh</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div class=\"input-group input-group-sm mb-3\">\r\n                                <span class=\"input-group-text\" id={`inputGroup-sizing-sm-s-interval`}>Interval</span>\r\n                                <select class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby={`inputGroup-sizing-sm-interval`} value={refreshInterval}\r\n                                    onChange={onHandleIntervalChange}\r\n                                >\r\n                                    <option>Select Interval</option>\r\n                                    {intervalOptions.map((opt) => {\r\n                                        return <option value={opt.value}>{opt.label}</option>\r\n                                    })}\r\n                                </select>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-2 col-sm-6\">\r\n                    <button className=\"btn btn-sm btn-primary btn-block\" onClick={handleOnSearch}>Search</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row d-md-block d-lg-block d-sm-none d-xs-none d-none\">\r\n                {(searchConditions || []).map((srch) => {\r\n                    let ctr = 0;\r\n                    return <div className=\"col-md-12 slot-result-wrapper\">\r\n                        <h4>{srch.state_name} ({srch.district_name})</h4>\r\n                        <table className=\"table table-dark table-striped table-sm table-hover table-slot-result\">\r\n                            <thead>\r\n                                <tr>\r\n\r\n                                    <th>#</th>\r\n                                    <th>Fee Type</th>\r\n                                    <th>Fees</th>\r\n                                    <th>Vaccine</th>\r\n                                    <th>Age Limit</th>\r\n                                    <th>Avl Capacity</th>\r\n                                    <th>Avl Dose 1</th>\r\n                                    <th>Avl Dose 2</th>\r\n                                    <th>Date</th>\r\n                                    <th>Address</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {(srch.availableSlots || []).length === 0 && <tr><td colSpan=\"10\" className='no-record'>No slots found!</td></tr>}\r\n                                {(srch.availableSlots || []).map((slot) => {\r\n                                    return (slot.sessions || []).map((session, indx) => {\r\n                                        return <tr>\r\n                                            <td>{++ctr}</td>\r\n                                            <td>{slot.center.fee_type}</td>\r\n                                            <td>{slot.center.vaccine_fees ? `${slot.center.vaccine_fees[0].fee} (${slot.center.vaccine_fees[0].vaccine})` : '0'}</td>\r\n                                            <td>{session.vaccine}</td>\r\n                                            <td>{session.min_age_limit}</td>\r\n                                            <td>{session.available_capacity}</td>\r\n                                            <td>{session.available_capacity_dose1}</td>\r\n                                            <td>{session.available_capacity_dose2}</td>\r\n                                            <td>{session.date}</td>\r\n                                            <td>{slot.center.name}, {slot.center.address}</td>\r\n\r\n                                        </tr>\r\n                                    })\r\n\r\n                                })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"row d-lg-none d-md-none d-sm-block d-xs-block\">\r\n                {(searchConditions || []).map((srch) => {\r\n                    return <div className=\"col-md-12 slot-result-wrapper\">\r\n                        <h4>{srch.state_name} ({srch.district_name})</h4>\r\n                        {(srch.availableSlots || []).length === 0 && <div className='no-record'>No slots found!</div>}\r\n                        <div class=\"list-group\">\r\n                            {(srch.availableSlots || []).map((slot) => {\r\n                                return (slot.sessions || []).map((session, indx) => {\r\n                                    return <a href=\"javascript:void(0)\" class=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                                        <div class=\"d-flex w-100 justify-content-between\">\r\n                                            <h5 class=\"mb-1\">\r\n                                                Age Limit: {session.min_age_limit},\r\n                                                Rs. {slot.center.vaccine_fees ? `${slot.center.vaccine_fees[0].fee} (${slot.center.vaccine_fees[0].vaccine})` : '0'}\r\n                                            </h5>\r\n                                            <small>\r\n                                                <span class=\"badge bg-primary\">{slot.center.fee_type}</span>\r\n                                            </small>\r\n                                        </div>\r\n                                        <p class=\"mb-1\">\r\n                                            Available Capacity: {session.available_capacity},{` `}\r\n                                            <b>Dose 1</b>: {session.available_capacity_dose1},{` `}\r\n                                            <b>Dose 2</b>: {session.available_capacity_dose2},\r\n                                                 </p>\r\n                                        <small>Vaccine: {session.vaccine}, Date: {session.date}</small>\r\n\r\n                                        <p><small>{slot.center.name}, {slot.center.address}</small></p>\r\n                                    </a>\r\n                                })\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderBarComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport { SECRET_CODE, SECRET_KEY } from '../../util';\r\nfunction LoginComponent(props) {\r\n    const { onHandleSubmit } = props;\r\n\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const [formValues, setFormValues] = useState({\r\n        secretCode: null,\r\n        secretKey: null\r\n    });\r\n\r\n    const handleChange = (evt) => {\r\n        const { id, value } = evt.target;\r\n        setFormValues((prev) => {\r\n            return {\r\n                ...prev,\r\n                [id]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setIsError(false);\r\n\r\n        const { secretCode, secretKey } = formValues;\r\n        if (!secretCode || !secretKey) {\r\n            return false;\r\n        }\r\n        const flag = SECRET_KEY === secretKey && SECRET_CODE === secretCode;\r\n\r\n        if (!flag) {\r\n            setIsError(true);\r\n            return;\r\n        }\r\n\r\n        onHandleSubmit && onHandleSubmit(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <div class=\"mb-3\">\r\n                <label for=\"secretCode\" class=\"form-label\">Code</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"secretCode\" placeholder=\"Enter code\" onChange={handleChange} />\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label for=\"secretKey\" class=\"form-label\">Secret Key</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"secretKey\" placeholder=\"Enter secret key\" onChange={handleChange} />\r\n            </div>\r\n\r\n\r\n            {isError && <div className='text-danger'>Invalid code and key. Please try with valid credentials. </div>}\r\n            <br />\r\n            <button type=\"button\" class=\"btn btn-primary btn-block\" disabled={!formValues.secretCode || !formValues.secretKey} onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport { setItem, getItem, removeItem } from '../../util';\r\nimport HeaderBarComponent from '../header-bar-component/index';\r\nimport LoginComponent from '../login-component/index';\r\n\r\nfunction HomeComponent() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const onHandleSubmit = (flag) => {\r\n        setIsLoggedIn(flag);\r\n        setItem('ISLG', flag);\r\n    }\r\n\r\n    const onHandleLogout = () => {\r\n        removeItem('ISLG');\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loginFlag = getItem('ISLG', false);\r\n        setIsLoggedIn(loginFlag);\r\n    }, [])\r\n\r\n    useEffect(() => { }, [isLoggedIn])\r\n\r\n    return (\r\n        <div className=\"row row-home\">\r\n\r\n\r\n            <div className=\"col-md-12\">\r\n\r\n                {!isLoggedIn\r\n                    ? <LoginComponent onHandleSubmit={onHandleSubmit} />\r\n                    : <>\r\n                        <figure class=\"text-center fig-app\">\r\n                            <blockquote class=\"blockquote\">\r\n                                <p>Vaccine Slot Finder.</p>\r\n                                <button className=\"btn btn-sm btn-danger btn-logout\" onClick={onHandleLogout}>Log Out</button>\r\n                            </blockquote>\r\n                            <figcaption class=\"blockquote-footer\">\r\n                                <cite title=\"Source Title\">Find slots at multiple locations together</cite>\r\n                            </figcaption>\r\n                        </figure>\r\n                        <HeaderBarComponent />\r\n                    </>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeComponent;\r\n","import './App.css';\nimport HomeComponent from './components/home-component';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}